<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	
	<!-- 프로젝트에 대한 정의 -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.myproject</groupId>
	<artifactId>myProject</artifactId>
	<name>myProject</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	
	<!-- 프로퍼티 태그 : xml에서 변수로 사용될 내용 -->
	<properties>
		<java-version>1.8</java-version>
		<org.springframework-version>5.0.4.RELEASE</org.springframework-version>
		<org.aspectj-version>1.8.1</org.aspectj-version>
	</properties>
	
	<!-- repository 태그 : 라이브러리를 받아올 저장소를 지정 -->
	<!-- repository내 scope 태그 : build시에만 추가하겠다. -->
	<repositories>
		<!-- About DB connect -->
	    <repository>
	        <id>oracle</id>
	        <name>ORACLE JDBC Repository</name>
	        <url>http://maven.jahia.org/maven2</url>
	    </repository>
	    
	    <!-- About MQTT -->
	   	<repository>
      		<id>Eclipse Paho Repo</id>
      		<url>https://repo.eclipse.org/content/repositories/paho-releases/</url>
    	</repository>	
	</repositories>
	
	<!-- dependenciy 태그 : 프로젝트에서 사용되는 라이브러리들을 지정 -->
	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- Logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>LATEST</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>LATEST</version>
		</dependency>
		
		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.3.2-b02</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		
		<!-- Jackson JSON Processor -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.3</version>
		</dependency>
		
		<dependency>
   			<groupId>com.rometools</groupId>
   			<artifactId>rome</artifactId>
   			<version>1.8.0</version>
		</dependency>

		<!-- File Upload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.3</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.5</version>
		</dependency>
		
		<dependency>
			<groupId>org.imgscalr</groupId>
			<artifactId>imgscalr-lib</artifactId>
			<version>4.2</version>
		</dependency>
		
		<!-- Valid Annotation을 이용한 Bean Validation 체크하는 라이브러리 -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.1.Final</version>
		</dependency>
		
		<!-- Valid Annotation을 이용하기 위해 추가로 필요한 라이브러리 -->
		<dependency>
    		<groupId>org.hibernate.validator</groupId>
    		<artifactId>hibernate-validator</artifactId>
    		<version>6.0.2.Final</version>
		</dependency>
		<dependency>
    		<groupId>org.hibernate.validator</groupId>
    		<artifactId>hibernate-validator-annotation-processor</artifactId>
    		<version>6.0.2.Final</version>
		</dependency>
		
		<!-- Valid Annotation에 매세지를 추가하기 위한 라이브러리 -->
		<dependency>
    		<groupId>javax.el</groupId>
    		<artifactId>javax.el-api</artifactId>
    		<version>3.0.0</version>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.web</groupId>
		    <artifactId>javax.el</artifactId>
		    <version>2.2.6</version>
		</dependency>
		
		<!-- Local Date 사용을 위한 라이브러리 -->
		<dependency>
		    <groupId>joda-time</groupId>
		    <artifactId>joda-time</artifactId>
    		<version>2.3</version>
		</dependency>

		<!-- About MQTT -->
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-client</artifactId>
		<version>9.2.14.v20151106</version>
		</dependency>
    	<dependency>
        	<groupId>org.eclipse.paho</groupId>
        	<artifactId>org.eclipse.paho.client.mqttv3</artifactId>
        	<version>1.1.0</version>
    	</dependency>
		
		<!-- ojdbc6 -->
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc6</artifactId>
            <version>12.1.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>5.0.4.RELEASE</version>
        </dependency>
	
		<!-- Test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.xmlunit</groupId>
			<artifactId>xmlunit-matchers</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.4.0</version>
			<scope>test</scope>
		</dependency>
  		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

		<!-- MyBatis -->
		<dependency>
      		<groupId>org.mybatis</groupId>
      		<artifactId>mybatis</artifactId>
      		<version>3.2.7</version>
    	</dependency>
    	<dependency>
      		<groupId>org.mybatis</groupId>
      		<artifactId>mybatis-spring</artifactId>
      		<version>1.2.2</version>
    	</dependency>
		
		<!-- Ftp -->
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.9.0</version>
		</dependency>
		
		<!-- SFtp -->
		<dependency>
		   <groupId>com.jcraft</groupId>
		   <artifactId>jsch</artifactId>
		   <version>0.1.55</version>
		</dependency>

		<!-- GCM PUSH -->
		<dependency>
    		<groupId>com.ganyo</groupId>
    		<artifactId>gcm-server</artifactId>
    		<version>1.0.2</version>
		</dependency>
	</dependencies>

	<!-- 프로젝트 빌드 설정 -->
	<build>
		<finalName>${project.artifactId}</finalName>
		<pluginManagement>
			<plugins>
				<!-- 컴파일 시 사용되는 플러그인 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.7.0</version>
					<configuration>
						<source>${java-version}</source>
						<target>${java-version}</target>
					</configuration>
				</plugin>
				
				<!-- 와르로 묶을 시 사용되는 플러그인 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
				
				<!-- 테스트 시 사용되는 플러그인 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.20.1</version>
					<configuration>
						<includes>
							<include>**/*Tests.java</include>
						</includes>
						<excludes>
							<exclude>**/Abstract*.java</exclude>
						</excludes>
						<junitArtifactName>junit:junit</junitArtifactName>
						<argLine>-Xmx512m</argLine>
					</configuration>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>install</id>
							<phase>install</phase>
							<goals>
								<goal>sources</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
				<!-- mojo : Model Object, pojo : Plain Old Java Object -->
				<!-- AOP 개념을 위한 플러그인 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>aspectj-maven-plugin</artifactId>
					<version>1.11</version>
					<dependencies>
						<dependency>
							<groupId>org.aspectj</groupId>
							<artifactId>aspectjrt</artifactId>
							<version>${org.aspectj-version}</version>
						</dependency>
						<dependency>
							<groupId>org.aspectj</groupId>
							<artifactId>aspectjtools</artifactId>
							<version>${org.aspectj-version}</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>       <!-- weave all main classes -->
								<goal>test-compile</goal>  <!-- weave all test classes -->
							</goals>
						</execution>
					</executions>
					<configuration>
						<outxml>true</outxml>
						<complianceLevel>${java-version}</complianceLevel>
						<source>${java-version}</source>
						<target>${java-version}</target>
					</configuration>
				</plugin>
				
				<!-- 설치없이 웹 앱을 사용 할 수 있게 해주는 플러그인 -->
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>9.4.8.v20171121</version>
					<configuration>
						<webApp>
							<contextPath>/${project.artifactId}</contextPath>
						</webApp>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
